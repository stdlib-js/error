{"version":3,"file":"index.mjs","sources":["../reviver/lib/ctors.js","../reviver/lib/main.js","../to-json/lib/ctors.js","../to-json/lib/main.js","../to-json/lib/type.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar CTORS = {\n\t'Error': Error,\n\t'TypeError': TypeError,\n\t'SyntaxError': SyntaxError,\n\t'ReferenceError': ReferenceError,\n\t'URIError': URIError,\n\t'EvalError': EvalError,\n\t'RangeError': RangeError\n};\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport ctors from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized error object.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|Error|SyntaxError|URIError|EvalError|ReferenceError|RangeError|TypeError)} value or error object\n*\n* @example\n* import parseJSON from '@stdlib/utils/parse-json';\n*\n* var str = '{\"type\":\"TypeError\",\"message\":\"beep\"}';\n* var err = parseJSON( str, reviveError );\n* // returns <TypeError>\n*/\nfunction reviveError( key, value ) {\n\tvar hasStack;\n\tvar ctor;\n\tvar keys;\n\tvar err;\n\tvar k;\n\tvar i;\n\tif (\n\t\tvalue &&\n\t\tvalue.type &&\n\t\tisString( value.message )\n\t) {\n\t\tctor = ctors[ value.type ];\n\t\tif ( ctor ) {\n\t\t\terr = new ctor( value.message );\n\t\t\tkeys = objectKeys( value );\n\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\tk = keys[ i ];\n\t\t\t\tif (\n\t\t\t\t\tk === 'type' ||\n\t\t\t\t\tk === 'message' ||\n\t\t\t\t\tk === 'name' // read-only for built-ins\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif ( k === 'stack' ) {\n\t\t\t\t\tif ( !isString( value[k] ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\thasStack = true;\n\t\t\t\t}\n\t\t\t\terr[ k ] = value[ k ];\n\t\t\t}\n\t\t\tif ( !hasStack && isString( err.stack ) ) {\n\t\t\t\terr.stack = '';\n\t\t\t}\n\t\t\treturn err;\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nexport default reviveError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar CTORS = [\n\t[ TypeError, 'TypeError' ],\n\t[ SyntaxError, 'SyntaxError' ],\n\t[ ReferenceError, 'ReferenceError' ],\n\t[ RangeError, 'RangeError' ],\n\t[ URIError, 'URIError' ],\n\t[ EvalError, 'EvalError' ],\n\t[ Error, 'Error' ]\n];\n\n\n// EXPORTS //\n\nexport default CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils/keys';\nimport copy from '@stdlib/utils/copy';\nimport isError from '@stdlib/assert/is-error';\nimport format from '@stdlib/string/format';\nimport typeName from './type.js';\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of an error object.\n*\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} err - error to serialize\n* @throws {TypeError} must provide an error object\n* @returns {Object} JSON representation\n*\n* @example\n* var err = new Error( 'beep' );\n* var json = error2json( err );\n* // returns {...}\n*/\nfunction error2json( err ) {\n\tvar keys;\n\tvar out;\n\tvar i;\n\tif ( !isError( err ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an error object. Value: `%s`.', err ) );\n\t}\n\tout = {};\n\n\t// Guaranteed properties:\n\tout.type = typeName( err );\n\tout.message = err.message;\n\n\t// Possible general error properties...\n\tif ( err.name ) {\n\t\tout.name = err.name;\n\t}\n\tif ( err.stack ) {\n\t\tout.stack = err.stack;\n\t}\n\t// Possible Node.js (system error) properties...\n\tif ( err.code ) {\n\t\tout.code = err.code;\n\t}\n\tif ( err.errno ) {\n\t\tout.errno = err.errno;\n\t}\n\tif ( err.syscall ) {\n\t\tout.syscall = err.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( err );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tout[ keys[i] ] = copy( err[ keys[i] ] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default error2json;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport instanceOf from '@stdlib/assert/instance-of';\nimport ctorName from '@stdlib/utils/constructor-name';\nimport getPrototypeOf from '@stdlib/utils/get-prototype-of';\nimport CTORS from './ctors.js';\n\n\n// MAIN //\n\n/**\n* Returns the error type.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - input error\n* @returns {(string|void)} error type\n*\n* @example\n* var err = new TypeError();\n* var out = typeName( err );\n* // returns 'TypeError'\n*/\nfunction typeName( error ) {\n\tvar v;\n\tvar i;\n\n\t// Check for error objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( instanceOf( error, CTORS[ i ][ 0 ] ) ) {\n\t\t\treturn CTORS[ i ][ 1 ];\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired native class...\n\twhile ( error ) {\n\t\tv = ctorName( error );\n\t\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\t\tif ( v === CTORS[ i ][ 1 ] ) {\n\t\t\t\treturn CTORS[ i ][ 1 ];\n\t\t\t}\n\t\t}\n\t\terror = getPrototypeOf( error );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default typeName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: tools\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name reviveError\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/error/reviver}\n*/\nimport reviveError from './../reviver';\nsetReadOnly( ns, 'reviveError', reviveError );\n\n/**\n* @name error2json\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/error/to-json}\n*/\nimport error2json from './../to-json';\nsetReadOnly( ns, 'error2json', error2json );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["CTORS","Error","TypeError","SyntaxError","ReferenceError","URIError","EvalError","RangeError","reviveError","key","value","hasStack","ctor","keys","err","k","i","type","isString","message","ctors","objectKeys","length","stack","error2json","out","isError","format","error","v","instanceOf","ctorName","getPrototypeOf","typeName","name","code","errno","syscall","copy","ns","setReadOnly"],"mappings":";;+0BAsBA,IAAIA,EAAQ,CACXC,MAASA,MACTC,UAAaA,UACbC,YAAeA,YACfC,eAAkBA,eAClBC,SAAYA,SACZC,UAAaA,UACbC,WAAcA,YCcf,SAASC,EAAaC,EAAKC,GAC1B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,GACCN,GACAA,EAAMO,MACNC,EAAUR,EAAMS,WAEhBP,EAAOQ,EAAOV,EAAMO,OACR,CAGX,IAFAH,EAAM,IAAIF,EAAMF,EAAMS,SACtBN,EAAOQ,EAAYX,GACbM,EAAI,EAAGA,EAAIH,EAAKS,OAAQN,IAE7B,GACO,UAFPD,EAAIF,EAAMG,KAGH,YAAND,GACM,SAANA,EAHD,CAOA,GAAW,UAANA,EAAgB,CACpB,IAAMG,EAAUR,EAAMK,IACrB,SAEDJ,GAAW,CACX,CACDG,EAAKC,GAAML,EAAOK,EAPjB,CAYF,OAHMJ,GAAYO,EAAUJ,EAAIS,SAC/BT,EAAIS,MAAQ,IAENT,CACP,CAEF,OAAOJ,CACR,CC7DA,IAAIV,EAAQ,CACX,CAAEE,UAAW,aACb,CAAEC,YAAa,eACf,CAAEC,eAAgB,kBAClB,CAAEG,WAAY,cACd,CAAEF,SAAU,YACZ,CAAEC,UAAW,aACb,CAAEL,MAAO,UCcV,SAASuB,EAAYV,GACpB,IAAID,EACAY,EACAT,EACJ,IAAMU,EAASZ,GACd,MAAM,IAAIZ,UAAWyB,EAAQ,+DAAgEb,IA2B9F,KAzBAW,EAAM,CAAA,GAGFR,KCXL,SAAmBW,GAClB,IAAIC,EACAb,EAGJ,IAAMA,EAAI,EAAGA,EAAIhB,EAAMsB,OAAQN,IAC9B,GAAKc,EAAYF,EAAO5B,EAAOgB,GAAK,IACnC,OAAOhB,EAAOgB,GAAK,GAIrB,KAAQY,GAAQ,CAEf,IADAC,EAAIE,EAAUH,GACRZ,EAAI,EAAGA,EAAIhB,EAAMsB,OAAQN,IAC9B,GAAKa,IAAM7B,EAAOgB,GAAK,GACtB,OAAOhB,EAAOgB,GAAK,GAGrBY,EAAQI,EAAgBJ,EACxB,CACF,CDTYK,CAAUnB,GACrBW,EAAIN,QAAUL,EAAIK,QAGbL,EAAIoB,OACRT,EAAIS,KAAOpB,EAAIoB,MAEXpB,EAAIS,QACRE,EAAIF,MAAQT,EAAIS,OAGZT,EAAIqB,OACRV,EAAIU,KAAOrB,EAAIqB,MAEXrB,EAAIsB,QACRX,EAAIW,MAAQtB,EAAIsB,OAEZtB,EAAIuB,UACRZ,EAAIY,QAAUvB,EAAIuB,SAGnBxB,EAAOQ,EAAYP,GACbE,EAAI,EAAGA,EAAIH,EAAKS,OAAQN,IAC7BS,EAAKZ,EAAKG,IAAOsB,EAAMxB,EAAKD,EAAKG,KAElC,OAAOS,CACR,CEvCA,IAAAc,EAAA,CAAA,EAUAC,EAAAD,EAAA,cAAA/B,GAUAgC,EAAAD,EAAA,aAAAf"}