"10",`x` min must be strictly less than max
"11",`y` min must be strictly less than max
"12",Kernel is not a function from getKernel
"13",First argument must be a numeric array
"14",Second argument must be a numeric array
"15",First and second argument must be of same length
"16",invalid arguments. Arguments `x` and `y` must have the same length.
"17",invalid arguments. Arguments `x` and `factor` must be arrays of the same length.
"18",invalid option. `alpha` must be a number in [0,1].
"19",invalid arguments. Must provide a length, typed array, array-like object, or an iterable.
"20",invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.
"21",invalid arguments. Input and output arrays must have the same number of elements ( i.e., length).
"22",invalid arguments. Input ndarrays must be broadcast compatible.
"23",invalid arguments. Input arrays must have the same number of elements (i.e., length).
"24",insufficient input arguments. Must provide both a target object and one or more source objects.
"25",invalid argument. The list does not contain the provided list node.
"26",not implemented. Please post an issue on the @stdlib/stdlib issue tracker if you would like this to be implemented.
"27",invalid arguments. Input and output arrays must have the same length.
"28",invalid argument. Second argument must have a length equal to the size of the outermost input array dimension.
"29",evaluation error. Did not receive timing results.
"00",insufficient input arguments. Must provide two or more iterators.
"01",insufficient input arguments. Must provide a hash function.
"02",invalid argument. Iterator arguments must be iterator protocol-compliant objects.
"03",insufficient input arguments. Must provide both an iterator and a static value.
"04",insufficient input arguments. Must provide at least one iterator function.
"05",invalid invocation. `this` is not a fluent interface iterator.
"06",invalid operation. A browser environment has no support for changing the current working directory.
"07",invalid operation. The environment does not support reading from `stdin`.
"08",invalid option. `prng` option must have a `MIN` property specifying the minimum possible pseudorandom integer value.
"09",invalid option. `prng` option must have a `MAX` property specifying the maximum possible pseudorandom integer value.
"0A",unexpected error. PRNG returned `NaN`.
"0B",not implemented
"0C",insufficient input arguments. Must provide a search value.
"0D",invalid argument. Must provide a username or, to get who an authenticated user is following, an access token.
"0E",invalid argument. Must provide a username or, to get a list of repositories an authenticated user has starred, an access token.
"0F",invalid argument. Must provide a username or, to get a list of repositories an authenticated user is watching, an access token.
"0G",unexpected error. Unable to resolve package directory as unable to find a `package.json` in a parent directory.
"0H",unexpected error. Unable to resolve root project directory.
"0I",invalid argument. Source code does not contain JSDoc comment with function options.
"0J",insufficient input arguments. Must provide at least one array.
"0K",insufficient input arguments. Must provide multiple functions to compose.
"0L",invalid arguments. First and last arguments must be the same length.
"0M",insufficient input arguments. Must provide multiple functions to execute sequentially.
"0N",insufficient input arguments. Must provide at least two objects.
"0O",insufficient input arguments. Must provide either an array of code points or one or more code points as separate arguments.
"0P",invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.
"0Q",unexpected error. Unable to resolve global object.
"0R",invalid argument. Must provide a zipped array.
"0S",invalid argument. Array must only contain arrays.
"0T",invalid argument. Indices must be specified as an array.
"0U",invalid argument. All indices must be integers.
"0V",invalid argument. Must provide valid indices; i.e., an index must be on the interval [0,len], where len is the tuple length.
"0W",invalid invocation. Constructor must be called with the `new` keyword.
"0X",invalid option. `mode` option cannot be an empty array.
"0Y",invalid argument. Input array must have length `2`.
"0Z",invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.
"0a",invalid argument. Input array offset argument must be a nonnegative integer.
"0b",invalid argument. Output array offset argument must be a nonnegative integer.
"0c",invalid argument. First input array offset argument must be a nonnegative integer.
"0d",invalid argument. Second input array offset argument must be a nonnegative integer.
"0e",invalid arguments. Interface must accept at least one strided input and/or output array. Based on the provided arguments, `nin+nout` equals `0`.
"0f",invalid argument. Unexpected number of types. A type must be specified for each strided input and output array for each provided strided array function.
"0g",invalid argument. The third argument must have the same number of elements as the first argument.
"0h",invalid argument. Fourth argument is incompatible with the number of strided input and output arrays.
"0i",invalid invocation. Insufficient arguments.
"0j",invalid invocation. Too many arguments.
"0k",invalid argument. First argument must be an integer.
"0l",invalid argument. Input array stride argument must be an integer.
"0m",invalid argument. Output array stride argument must be an integer.
"0n",invalid argument. Input array argument must be an array-like object.
"0o",invalid argument. Output array argument must be an array-like object.
"0p",invalid argument. Input array argument has insufficient elements based on the associated stride and the number of indexed elements.
"0q",invalid argument. Output array argument has insufficient elements based on the associated stride and the number of indexed elements.
"0r",invalid arguments. Subpopulation size `K` must be smaller than or equal to `N`.
"0s",invalid arguments. Number of draws `n` must be smaller than or equal to `N`.
"0t",invalid argument. First argument must contain at least one element greater than zero (i.e., the total number number of observations must be greater than zero).
"0u",invalid arguments. First and second arguments must have the same length.
"0v",invalid arguments. First argument and `opts.groups` must be arrays of the same length.
"0w",invalid arguments. Arguments `x` and `y` must be arrays of the same length
"0x",not enough observations. `x` and `y` must contain at least four observations.
"0y",invalid arguments. The first and second arguments must have the same length.
"0z",`x` or `x - y` cannot be zero for all elements.
"1A",invalid arguments. Creating a generic array from an ArrayBuffer is not supported.
"1B",invalid argument. Must provide a length, typed array, array-like object, or an iterable.
"1C",invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, or an iterable.
"1D",invalid invocation. `this` context must be a constructor.
"1E",invalid invocation. `this` is not a complex number array.
"1F",invalid argument. First argument must be an array-like object or an iterable.
"1G",invalid arguments. Target array lacks sufficient storage to accommodate source values.
"1H",The current environment does not support SharedArrayBuffers, and, unfortunately, SharedArrayBuffers cannot be polyfilled. For shared memory applications, upgrade your runtime environment to one which supports SharedArrayBuffers.
"1I",invalid argument. Length must a positive integer.
"1J",invalid option. `round` option must be a string.
"1K",invalid arguments. Generated array exceeds maximum array length.
"1L",invalid arguments. If either of the first two arguments are complex numbers, the output array must be a complex number array or a "generic" array-like object.
"1M",invalid arguments. If either of the first two arguments are complex numbers, the output array data type must be a complex number data type or "generic".
"1N",invalid invocation. Insufficient arguments. Must provide a REPL instance.
"1O",invalid operation. No presentation to reload. Use the `load()` method to load a presentation.
"1P",invalid operation. No presentation file to watch. Use the `load()` method to load a presentation.
"1Q",unexpected error. Encountered a "rename" event for the source presentation file. No longer watching source presentation file for changes.
"1R",invalid invocation. Must provide either a string containing presentation text or an options object specifying a presentation file to load.
"1S",invalid argument. When not provided presentation text, an options argument must specify a presentation file to load.
"1T",invalid invocation. Not currently in a presentation workspace. Must provide either a string or nonnegative integer which corresponds to the identifier of the presentation to be stopped.
"1U",invalid operation. Cannot delete the `base` workspace.
"1V",invalid argument. Must provide a program AST node.
"1W",command execution terminated.
"1X",invalid operation. Cannot load a file into a REPL which has already closed.
"1Y",invalid operation. Cannot reset a REPL which has already closed.
"1Z",invalid operation. Cannot clear a REPL which has already closed.
"1a",invalid operation. Cannot clear the line of a REPL which has already closed.
"1b",invalid operation. Cannot clear the command buffer of a REPL which has already closed.
"1c",invalid argument. Provided command either does not contain an `await` expression or contains a top-level `return` which is not allowed.
"1d",invalid argument. Cannot broadcast an array to a shape having fewer dimensions. Arrays can only be broadcasted to shapes having the same or more dimensions.
"1e",invalid argument. Must provide an ndarray having two or more dimensions.
"1f",invalid arguments. Arrays must have the same shape.
"1g",invalid argument. First argument must contain at least one element.
"1h",invalid arguments. The length of the first argument is incompatible with the second and third arguments.
"1i",invalid invocation. Cannot write to a read-only array.
"1j",invalid argument. `strides` length must be equal to 1 when creating a zero-dimensional ndarray.
"1k",invalid arguments. The input buffer is incompatible with the specified meta data. Ensure that the offset is valid with regard to the strides array and that the buffer has enough elements to satisfy the desired array shape.
"1l",invalid arguments. Must provide either a data source, array shape, or both.
"1m",invalid arguments. Array shape is incompatible with provided data source. Number of data source elements does not match array shape.
"1n",invalid arguments. Interface must accept at least one input and/or output ndarray. Based on the provided arguments, `nin+nout` equals `0`.
"1o",invalid arguments. Fourth argument does not equal the number of input and output ndarrays.
"1p",invalid argument. Unexpected number of types. A type must be specified for each input and output ndarray for each provided ndarray function.
"1q",invalid argument. Input array argument must be an ndarray-like object.
"1r",invalid argument. Output array argument must be an ndarray-like object.
"1s",invalid arguments. Unable to resolve an ndarray function supporting the provided array argument data types.
"1t",invalid argument. Third argument must not be an empty string.
"1u",invalid argument. Output string length exceeds maximum allowed string length.
"1v",invalid argument. Pad string must not be an empty string.
"1w",invalid operation. Unable to load Electron. Ensure Electron is installed and try again.
"1x",method not implemented.
"1y",max retries exceeded. Too many open files.
"1z",invalid arguments. Strided array parameters are incompatible with the provided array-like object. Linear index exceeds array bounds.
"2A",evaluation error. Unable to retrieve evaluation results. Ensure that the provided snippet does not return prematurely.
"2B",invalid invocation. `this` is not host tuple.
"2C",invalid invocation. `this` is not the host tuple factory.
"2D",invalid invocation. `this` is not a compact adjacency matrix.
"2E",invalid argument. Providing a number is not supported.
"2F",invalid argument. Providing a complex number is not supported.
"2G",invalid argument. Providing an ndarray is not supported.
"2H",invalid argument. Providing an array-like object is not supported.
"2I",invalid argument. If the first argument is an ndarray, the second argument must be an ndarray.
"2J",invalid argument. Output array must have the same number of elements (i.e., length) as the input array.
"2K",invalid argument. If the first argument is an array-like object, the second argument must be an array-like object.
"2L",invalid argument. Providing a number is not supported. Consider providing a zero-dimensional ndarray containing the numeric value.
"2M",invalid argument. Providing a complex number is not supported. Consider providing a zero-dimensional ndarray containing the complex number value.
"2N",TODO: remove me
"2O",benchmark failed
"2P",invalid benchmark
"2Q",exception
"2R",invalid argument. Attempted to add duplicate listener.
"2S",invalid argument. Options must be an object. Value: `%s`.
"2T",invalid option. `%s` option must be a primitive string. Option: `%s`.
"2U",invalid option. `%s` option must be a primitive boolean. Option: `%s`.
"2V",invalid option. `%s` option must be a primitive string or null. Option: `%s`.
"2W",invalid option. `%s` option must be a nonnegative number. Option: `%s`.
"2X",invalid option. `%s` option must be a nonnegative integer. Option: `%s`.
"2Y",invalid option. `%s` option must be a positive integer. Option: `%s`.
"2Z",invalid argument. First argument must be a positive integer. Value: `%s`.
"2a",invalid argument. Second argument must be a probability. Value: `%s`.
"2b",invalid argument. First argument must be a number primitive and not `NaN`. Value: `%s`.
"2c",invalid argument. Second argument must be a positive number. Value: `%s`.
"2d",invalid argument. First argument must be a positive number. Value: `%s`.
"2e",invalid argument. First argument must be a primitive integer. Value: `%s`.
"2f",invalid argument. Second argument must be a primitive integer. Value: `%s`.
"2g",invalid argument. Minimum support `a` must be less than or equal to maximum support `b`. Value: `[%s,%s]`.
"2h",invalid argument. Second argument must be a number primitive and not `NaN`. Value: `%s`.
"2i",invalid argument. Third argument must be a number primitive and not `NaN`. Value: `%s`.
"2j",invalid arguments. The condition `a <= c <= b` must be satisfied. Value: `[%s,%s,%s]`.
"2k",invalid argument. `%s` must be a nonnegative integer. Value: `%s`.
"2l",invalid argument. `%s` must be less than or equal to `%s`. Value: `%s`.
"2m",invalid argument. Minimum support `a` must be less than maximum support `b`. Value: `[%s,%s]`.
"2n",invalid argument. First argument must be a probability. Value: `%s`.
"2o",invalid argument. First argument must be a positive number primitive and not `NaN`. Value: `%s`.
"2p",invalid argument. Second argument must be a positive number primitive and not `NaN`. Value: `%s`.
"2q",invalid argument. Third argument must be a number primitive. Value: `%s`.
